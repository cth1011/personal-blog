{"version":3,"sources":["webpack:///./src/pages/book.js","webpack:///./content/blog/atomic-habits/book-cover.png","webpack:///./content sync ^\\.\\/blog.*book\\-cover\\.png$"],"names":["BookIndex","styled","className","data","location","siteTitle","site","siteMetadata","title","posts","allMdx","edges","keywords","map","i","node","frontmatter","tags","author","score","date","postTitle","fields","slug","isBook","key","alt","src","require","style","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve"],"mappings":"iNAWMA,EAAYC,mBAAO,YAAoC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACrCC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,OAAOC,MAE1B,OACE,kBAAC,IAAD,CAAQT,UAAWA,EAAWE,SAAUA,EAAUI,MAAOH,GACvD,kBAAC,IAAD,CACEG,MAAM,aACNI,SAAU,CAAC,OAAD,iCAEXH,EAAMI,KAAI,WAAWC,GAAO,IAAfC,EAAc,EAAdA,KAAc,EACmBA,EAAKC,YAA1CC,EADkB,EAClBA,KAAMC,EADY,EACZA,OAAQC,EADI,EACJA,MAAOC,EADH,EACGA,KACvBC,EAFoB,EACSb,OACRO,EAAKO,OAAOC,KACjCC,EAAkB,SAATP,EACf,OACE,oCACGO,GACC,yBAAKC,IAAKX,EAAGZ,UAAU,eACrB,yBAAKA,UAAU,gBACb,yBACEA,UAAU,aACVwB,IAAI,aACJC,IAAKC,UAAQ,SAAqBb,EAAKO,OAAOC,KAAlC,qBAGhB,6BACE,6BACE,kBAAC,IAAD,CAAMrB,UAAU,cACd,kBAAC,OAAD,CAAM2B,MAAO,CAAEC,UAAU,QAAWC,GAAIhB,EAAKO,OAAOC,MACjDF,KAIP,6BACE,qCACMH,EADN,QACmBC,EADnB,aACoCC,IAGtC,uBAAGY,wBAAyB,CAAEC,OAAQlB,EAAKmB,oBAtC3CjC,CAAH,wOA8DAD,a,wDCzEfmC,EAAOC,QAAU,IAA0B,0D,qBCA3C,IAAIvB,EAAM,CACT,sCAAuC,QAIxC,SAASwB,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAE7B,EAAKyB,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAO9B,EAAIyB,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKjC,IAEpBwB,EAAeW,QAAUR,EACzBL,EAAOC,QAAUC,EACjBA,EAAeE,GAAK","file":"component---src-pages-book-js-be283458135e053a2e1f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Text } from \"grommet\"\n\nimport styled from \"styled-components\"\n\nimport * as colors from \"../../colors\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nconst BookIndex = styled(({ className, data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.edges\n\n  return (\n    <Layout className={className} location={location} title={siteTitle}>\n      <SEO\n        title=\"Book Notes\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {posts.map(({ node }, i) => {\n        const { tags, author, score, date, title } = node.frontmatter\n        const postTitle = title || node.fields.slug\n        const isBook = tags === \"book\"\n        return (\n          <>\n            {isBook && (\n              <div key={i} className=\"post-layout\">\n                <div className=\"book-section\">\n                  <img\n                    className=\"book-cover\"\n                    alt=\"book-cover\"\n                    src={require(`../../content/blog${node.fields.slug}book-cover.png`)}\n                  />\n                </div>\n                <div>\n                  <div>\n                    <Text className=\"post-title\">\n                      <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                        {postTitle}\n                      </Link>\n                    </Text>\n                  </div>\n                  <div>\n                    <small>\n                      By {author} | ‚≠ê {score} / 5 | üïõ {date}\n                    </small>\n                  </div>\n                  <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                </div>\n              </div>\n            )}\n          </>\n        )\n      })}\n    </Layout>\n  )\n})`\n  .post-layout {\n    display: flex;\n    flex-direction: row;\n  }\n  .book-section {\n    margin-right: 20px;\n    width: 190px;\n  }\n  .book-cover {\n    max-height: 100%;\n    max-width: 100%;\n  }\n`\n\nexport default BookIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            author\n            score\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/book-cover-c686654456f0c59e330d802a89c0324b.png\";","var map = {\n\t\"./blog/atomic-habits/book-cover.png\": \"a4s5\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"wYqh\";"],"sourceRoot":""}