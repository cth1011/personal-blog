{"componentChunkName":"component---src-templates-blog-post-js","path":"/mapbox-exam/","result":{"data":{"site":{"siteMetadata":{"title":"Chris Herrera","author":"Christopher Herrera"}},"mdx":{"id":"fde69565-3b27-51ee-aa96-cc382351876b","excerpt":"Introduction I was taking up the Mapbox GL JS exam, and I decided that I wanted to fully flex my web development skills for this exam. I used a  COVID-19 Japanâ€¦","frontmatter":{"title":"Creating a Japan COVID-19 Tracker using Mapbox GL JS and d3.js","date":"March 07, 2021"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a Japan COVID-19 Tracker using Mapbox GL JS and d3.js\",\n  \"date\": \"2021-03-07T13:52:32.169Z\",\n  \"tags\": \"Projects\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introduction\"), mdx(\"p\", null, \"I was taking up the Mapbox GL JS exam, and I decided that I wanted to fully flex my web development skills for this exam. I used a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ryo-ma/covid19-japan-web-api#data-sources\"\n  }, \"COVID-19 Japan API\"), \" that was updated daily. It was pretty straightforward to use with the necessary data points I wanted to project onto a map. I visualized all prefectures of Japan with their corresponding cases and tests.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/blog/cd130894130b4e3f51f38296a6494eb7/covid-japan.gif\",\n    \"alt\": \"COVID-19 Japan Prefectures\"\n  })), mdx(\"p\", null, \"Using d3.js, I visualized the trend of daily cases and tests added. The case breakdown wasalso visualized by \", mdx(Text, {\n    color: \"red\",\n    mdxType: \"Text\"\n  }, \"Severe\"), \", \", mdx(Text, {\n    color: \"orange\",\n    mdxType: \"Text\"\n  }, \"Active\"), \", \", mdx(Text, {\n    color: \"green\",\n    mdxType: \"Text\"\n  }, \"Recovered\"), \", and \", mdx(Text, {\n    color: \"grey\",\n    mdxType: \"Text\"\n  }, \"Death\"), \" through a stacked bar chart. I love the animations when hovering over from one prefecture to another.\"), mdx(\"p\", null, \"It was a fun web application to build in my past time, and well worth the time spent developing. For the record, I passed the Mapbox exam. I\\u2019m looking forward to building more web applications using Mapbox.\"), mdx(\"p\", null, \"Here\\u2019s the link to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://covid-japan.web.app/\"\n  }, \"tracker\"), \"!\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/mapbox-exam/","previous":null,"next":{"id":"3bbc7479-8ffe-53be-9c08-7f83b3ef13ce","fields":{"slug":"/atomic-habits/"},"frontmatter":{"title":"Making My Life 1% Better Each Day with System-based Habits"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Making My Life 1% Better Each Day with System-based Habits\",\n  \"date\": \"2021-03-21T13:52:32.169Z\",\n  \"tags\": \"Books\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"staticQueryHashes":["3128451518","426816048"]}